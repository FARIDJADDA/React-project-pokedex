{"version":3,"sources":["media/dracaufeu.png","helpers/forma-type.ts","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-form.tsx","components/loader.tsx","pages/pokemon-edit.tsx","helpers/format-date.ts","pages/pokemon-detail.tsx","models/pokemon.ts","components/Pokemon-card.tsx","components/pokemon-search.tsx","pages/pokemon-list.tsx","pages/page-not-found.tsx","pages/pokemon-add.tsx","services/authentification-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["module","exports","formatType","type","color","POKEMONS","id","name","hp","cp","picture","types","created","Date","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","push","term","includes","Object","keys","length","console","process","PokemonForm","isEditForm","history","useHistory","useState","value","isValid","form","setForm","hasType","handleInputChange","e","fieldName","target","fieldValue","newField","isTypesValid","handleSubmit","preventDefault","newForm","isAddForm","startsWith","endsWith","test","validateForm","updatePokemon","addPokemon","log","onSubmit","className","src","alt","style","width","margin","onClick","deletePokemon","htmlFor","onChange","map","key","marginBottom","checked","disabled","concat","currentType","selectType","Loader","PokemonEdit","match","setPokemon","useEffect","getPokemon","params","formaDate","date","getDate","getMonth","getFullYear","PokemonsDetail","to","formatDate","Pokemon","PokemonCard","borderColor","setColor","onMouseEnter","onMouseLeave","PokemonSearch","setTerm","setPokemons","placeholder","searchPokemon","PokemonList","getPokemons","position","bottom","right","PageNotFound","logo","PokemonsAdd","getTime","AuthentificationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","AuthenticationService","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9093f59a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dracaufeu.864b1c15.png\";","const formatType = (type: string): string => {\r\n  let color: string;\r\n\r\n  switch (type) {\r\n    case \"Feu\":\r\n      color = \"red lighten-1\";\r\n      break;\r\n    case \"Eau\":\r\n      color = \"blue lighten-1\";\r\n      break;\r\n    case \"Plante\":\r\n      color = \"green lighten-1\";\r\n      break;\r\n    case \"Insecte\":\r\n      color = \"brown lighten-1\";\r\n      break;\r\n    case \"Normal\":\r\n      color = \"grey lighten-3\";\r\n      break;\r\n    case \"Vol\":\r\n      color = \"blue lighten-3\";\r\n      break;\r\n    case \"Poison\":\r\n      color = \"deep-purple accent-1\";\r\n      break;\r\n    case \"Fée\":\r\n      color = \"pink lighten-4\";\r\n      break;\r\n    case \"Psy\":\r\n      color = \"deep-purple darken-2\";\r\n      break;\r\n    case \"Electrik\":\r\n      color = \"lime accent-1\";\r\n      break;\r\n    case \"Combat\":\r\n      color = \"deep-orange\";\r\n      break;\r\n    default:\r\n      color = \"grey\";\r\n      break;\r\n  }\r\n\r\n  return `chip ${color}`;\r\n};\r\n\r\nexport default formatType;\r\n","import Pokemon from \"./pokemon\";\r\n\r\nexport const POKEMONS: Pokemon[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Bulbizarre\",\r\n    hp: 25,\r\n    cp: 5,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n    types: [\"Plante\", \"Poison\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Salamèche\",\r\n    hp: 28,\r\n    cp: 6,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n    types: [\"Feu\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Carapuce\",\r\n    hp: 21,\r\n    cp: 4,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n    types: [\"Eau\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Aspicot\",\r\n    hp: 16,\r\n    cp: 2,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n    types: [\"Insecte\", \"Poison\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Roucool\",\r\n    hp: 30,\r\n    cp: 7,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n    types: [\"Normal\", \"Vol\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Rattata\",\r\n    hp: 18,\r\n    cp: 6,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n    types: [\"Normal\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Piafabec\",\r\n    hp: 14,\r\n    cp: 5,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n    types: [\"Normal\", \"Vol\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Abo\",\r\n    hp: 16,\r\n    cp: 4,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n    types: [\"Poison\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Pikachu\",\r\n    hp: 21,\r\n    cp: 7,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n    types: [\"Electrik\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Sabelette\",\r\n    hp: 19,\r\n    cp: 3,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n    types: [\"Normal\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Mélofée\",\r\n    hp: 25,\r\n    cp: 5,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n    types: [\"Fée\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Groupix\",\r\n    hp: 17,\r\n    cp: 8,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n    types: [\"Feu\"],\r\n    created: new Date(),\r\n  },\r\n];\r\n\r\nexport default POKEMONS;\r\n","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n\r\nexport default class PokemonService {\r\n  static pokemons: Pokemon[] = POKEMONS;\r\n\r\n  static isDev =\r\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\n  // ---------------GET-REQUEST-----------------------------\r\n\r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if (this.isDev) {\r\n      return fetch(\"http://localhost:3001/pokemons\")\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n\r\n  static getPokemon(id: number): Promise<Pokemon | null> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => (this.isEmpty(data) ? null : data))\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      resolve(this.pokemons.find((pokemon) => id === pokemon.id));\r\n    });\r\n  }\r\n\r\n  // ----------------PUT-REQUEST-----------------------------\r\n\r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(pokemon),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex((pokemon) => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  // ----------------DELETE-REQUEST------------------------------\r\n\r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter((pokemon) => pokemon.id !== id);\r\n      resolve({});\r\n    });\r\n  }\r\n\r\n  // ----------------POST-REQUEST---------------------------------\r\n\r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(pokemon),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  //  -------------------SEARCH-----------------------------------\r\n\r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      const results = this.pokemons.filter((pokemon) =>\r\n        pokemon.name.includes(term)\r\n      );\r\n      resolve(results);\r\n    });\r\n  }\r\n  // -------------------------------------------------------------\r\n\r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Pokemon from \"../models/pokemon\";\r\nimport formatType from \"../helpers/forma-type\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  isEditForm: boolean;\r\n};\r\n\r\ntype Field = {\r\n  value?: any;\r\n  error?: string;\r\n  isValid?: boolean;\r\n};\r\n\r\ntype Form = {\r\n  picture: Field;\r\n  name: Field;\r\n  hp: Field;\r\n  cp: Field;\r\n  types: Field;\r\n};\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    picture: { value: pokemon.picture },\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true },\r\n  });\r\n\r\n  const types: string[] = [\r\n    \"Plante\",\r\n    \"Feu\",\r\n    \"Eau\",\r\n    \"Insecte\",\r\n    \"Normal\",\r\n    \"Electrik\",\r\n    \"Poison\",\r\n    \"Fée\",\r\n    \"Vol\",\r\n    \"Combat\",\r\n    \"Psy\",\r\n  ];\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  };\r\n\r\n  const selectType = (\r\n    type: string,\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if (checked) {\r\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.filter(\r\n        (currentType: string) => currentType !== type\r\n      );\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({ ...form, ...{ types: newField } });\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator url\r\n    if (isAddForm()) {\r\n      const start =\r\n        \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if (\r\n        !form.picture.value.startsWith(start) ||\r\n        !form.picture.value.endsWith(end)\r\n      ) {\r\n        const errorMsg: string = \"L'url n'est pas valide.\";\r\n        const newField: Field = {\r\n          value: form.picture.value,\r\n          error: errorMsg,\r\n          isValid: false,\r\n        };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      } else {\r\n        const newField: Field = {\r\n          value: form.picture.value,\r\n          error: \"\",\r\n          isValid: true,\r\n        };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      }\r\n    }\r\n\r\n    // Validator name\r\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = \"Le nom du pokémon est requis (1-25).\";\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string =\r\n        \"Les points de vie du pokémon sont compris entre 0 et 999.\";\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string =\r\n        \"Les dégâts du pokémon sont compris entre 0 et 99\";\r\n      const newField: Field = {\r\n        value: form.cp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.cp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  };\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\r\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    // Cas n°1: Le pokémon a au moins 3 types.\r\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\r\n    if (form.types.value.length >= 3 && !hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true',\r\n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n\r\n    console.log(pokemon);\r\n  };\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\r\n  };\r\n\r\n  const isAddForm = (): boolean => {\r\n    return !isEditForm;\r\n  };\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\r\n  };\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() =>\r\n      history.push(`/pokemons/${pokemon.id}`)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            {isEditForm && (\r\n              <div className=\"card-image\">\r\n                <img\r\n                  src={pokemon.picture}\r\n                  alt={pokemon.name}\r\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\r\n                />\r\n                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i onClick={deletePokemon} className=\"material-icons\">\r\n                    delete\r\n                  </i>\r\n                </span>\r\n              </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"picture\">Image</label>\r\n                    <input\r\n                      id=\"picture\"\r\n                      type=\"text\"\r\n                      name=\"picture\"\r\n                      className=\"form-control\"\r\n                      value={form.picture.value}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    ></input>\r\n                    {/* error */}\r\n                    {form.picture.error && (\r\n                      <div className=\"card-panel red accent-1\">\r\n                        {form.picture.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className=\"form-control\"\r\n                    value={form.name.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.name.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.name.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input\r\n                    id=\"hp\"\r\n                    type=\"number\"\r\n                    name=\"hp\"\r\n                    className=\"form-control\"\r\n                    value={form.hp.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.hp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.hp.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input\r\n                    id=\"cp\"\r\n                    type=\"number\"\r\n                    name=\"cp\"\r\n                    className=\"form-control\"\r\n                    value={form.cp.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.cp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.cp.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map((type) => (\r\n                    <div key={type} style={{ marginBottom: \"10px\" }}>\r\n                      <label>\r\n                        <input\r\n                          id={type}\r\n                          type=\"checkbox\"\r\n                          name=\"types\"\r\n                          className=\"filled-in\"\r\n                          value={type}\r\n                          checked={hasType(type)}\r\n                          disabled={!isTypesValid(type)}\r\n                          onChange={(e) => selectType(type, e)}\r\n                        ></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{type}</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">\r\n                  Valider\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PokemonForm;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nconst Loader: FunctionComponent = () => {\r\n  return (\r\n    <div className=\"preloader-wrapper big active\">\r\n      <div className=\"spinner-layer spinner-blue\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport PokemonForm from \"../components/pokemon-form\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\nimport Loader from \"../components/loader\";\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({\r\n  match,\r\n}) => {\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then((\r\n      pokemon // +match.params.id le + permet de convertir une chaine de character en nombre\r\n    ) => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <h2 className=\"header center\">Éditer {pokemon.name}</h2>\r\n          <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\">\r\n          <Loader />\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonEdit;\r\n","const formaDate = (date: Date = new Date()): string => {\r\n  return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n};\r\n\r\nexport default formaDate;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\n\r\nimport formatDate from \"../helpers/format-date\";\r\nimport formatType from \"../helpers/forma-type\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\nimport Loader from \"../components/loader\";\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({\r\n  match,\r\n}) => {\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then((\r\n      pokemon // +match.params.id le + permet de convertir une chaine de character en nombre\r\n    ) => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\">\r\n            <h2 className=\"header center\">{pokemon.name}</h2>\r\n            <div className=\"card hoverable\">\r\n              <div className=\"card-image\">\r\n                <img\r\n                  src={pokemon.picture}\r\n                  alt={pokemon.name}\r\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\r\n                />\r\n                <Link\r\n                  to={`/pokemons/edit/${pokemon.id}`}\r\n                  className=\"btn btn-floating halfway-fab waves-effect waves-light\"\r\n                >\r\n                  <i className=\"material-icons ri-edit-2-line\">edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Nom</td>\r\n                        <td>\r\n                          <strong>{pokemon.name}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Points de vie</td>\r\n                        <td>\r\n                          <strong>{pokemon.hp}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Dégâts</td>\r\n                        <td>\r\n                          <strong>{pokemon.cp}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Types</td>\r\n                        <td>\r\n                          {pokemon.types.map((type) => (\r\n                            <span key={type} className={formatType(type)}>\r\n                              {type}\r\n                            </span>\r\n                          ))}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Date de création</td>\r\n                        <td>{formatDate(pokemon.created)}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\">\r\n          <Loader />\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonsDetail;\r\n","export default class Pokemon {\r\n  // 1. Typage des propiétés d'un pokémon.\r\n  id: number;\r\n  hp: number;\r\n  cp: number;\r\n  name: string;\r\n  picture: string;\r\n  types: Array<string>;\r\n  created: Date;\r\n\r\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n  constructor(\r\n    id: number,\r\n    hp: number = 100,\r\n    cp: number = 10,\r\n    name: string = \"...\",\r\n    picture: string = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\",\r\n    types: Array<string> = [\"Normal\"],\r\n    created: Date = new Date()\r\n  ) {\r\n    // 3. Initialisation des propiétés d'un pokémons.\r\n    this.id = id;\r\n    this.hp = hp;\r\n    this.cp = cp;\r\n    this.name = name;\r\n    this.picture = picture;\r\n    this.types = types;\r\n    this.created = created;\r\n  }\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Pokemon from \"../models/pokemon\";\r\nimport formatDate from \"../helpers/format-date\";\r\nimport formatType from \"../helpers/forma-type\";\r\n\r\nimport \"./pokemon-card.css\";\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  borderColor?: string;\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({\r\n  pokemon,\r\n  borderColor = \"#009688\",\r\n}) => {\r\n  const [color, setColor] = useState<string>();\r\n  const history = useHistory();\r\n\r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  };\r\n\r\n  const hideBorder = () => {\r\n    setColor(\"#f5f5f5\");\r\n  };\r\n\r\n  const goToPokemon = (id: number) => {\r\n    history.push(`/pokemons/${id}`);\r\n  };\r\n  console.log(Pokemon);\r\n  return (\r\n    <div\r\n      className=\"col s6 m4\"\r\n      onMouseEnter={showBorder}\r\n      onMouseLeave={hideBorder}\r\n      onClick={() => goToPokemon(pokemon.id)}\r\n    >\r\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\r\n        <div className=\"card-image\">\r\n          <img src={pokemon.picture} alt={pokemon.name} />\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p>\r\n              <small>{formatDate(pokemon.created)}</small>\r\n            </p>\r\n            {pokemon.types.map((type) => (\r\n              <span key={type} className={formatType(type)}>\r\n                {type}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\nconst PokemonSearch: FunctionComponent = () => {\r\n  const [term, setTerm] = useState<string>(\"\"); // sauvegarde le term de recherche saisit par l'user\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]); // stockage de pokemon, correspondant au term de recherche\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n\r\n    if (term.length <= 1) {\r\n      // verifie si le term fait au moins 2 character de long\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n\r\n    PokemonService.searchPokemon(term).then((pokemons) =>\r\n      setPokemons(pokemons)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m6 offset-m3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"input-field\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Rechercher un pokémon\"\r\n                value={term}\r\n                onChange={(e) => handleInputChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"collection\">\r\n              {pokemons.map((\r\n                pokemon // list de pokemon qui responsond au term de recherche\r\n              ) => (\r\n                <Link\r\n                  key={pokemon.id}\r\n                  to={`/pokemons/${pokemon.id}`}\r\n                  className=\"collection-item\"\r\n                >\r\n                  {pokemon.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonSearch;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\n\r\nimport PokemonService from \"../services/pokemon-service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PokemonCard from \"../components/Pokemon-card\";\r\nimport PokemonSearch from \"../components/pokemon-search\";\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then((pokemons) => setPokemons(pokemons));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <PokemonSearch />\r\n          {pokemons.map((pokemon) => (\r\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Link\r\n        className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\r\n        style={{ position: \"fixed\", bottom: \"25px\", right: \"25px\" }}\r\n        to=\"/pokemons/add\"\r\n      >\r\n        <i className=\"material-icons\">add</i>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../media/dracaufeu.png\";\r\n\r\nconst PageNotFound: FunctionComponent = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <img src={logo} alt=\"Page non trouvée\" style={{ width: \"40%\" }} />\r\n      <h1>Hey, cette page n'existe pas !</h1>\r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\n\r\nimport PokemonForm from \"../components/pokemon-form\";\r\n\r\nimport Pokemon from \"../models/pokemon\";\r\n\r\nconst PokemonsAdd: FunctionComponent = () => {\r\n  const [id] = useState<number>(new Date().getTime()); // ientifiant unique pour le new pokemon (get time 1er janvier 1970)\r\n  const [pokemon] = useState<Pokemon>(new Pokemon(id)); // new pokemon vierge\r\n\r\n  console.log(Pokemon);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className=\"header center\">Ajouter un pokemon</h2>\r\n      <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonsAdd;\r\n","export default class AuthentificationService {\r\n  static isAuthenticated: boolean = false; // par default l'user n'est pas connecté :false\r\n\r\n  static login(username: string, password: string): Promise<boolean> {\r\n    const isAuthenticated = username === \"pikachu\" && password === \"pikachu\";\r\n\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        this.isAuthenticated = isAuthenticated;\r\n        resolve(isAuthenticated);\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AuthenticationService from \"../services/authentification-service\";\r\n\r\ntype Field = {\r\n  value?: any;\r\n  error?: string;\r\n  isValid?: boolean;\r\n};\r\n\r\ntype Form = {\r\n  username: Field;\r\n  password: Field;\r\n};\r\n\r\nconst Login: FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: \"\" },\r\n    password: { value: \"\" },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>(\r\n    \"Vous êtes déconnecté. (pikachu / pikachu)\"\r\n  );\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if (form.username.value.length < 3) {\r\n      const errorMsg: string =\r\n        \"Votre prénom doit faire au moins 3 caractères de long.\";\r\n      const newField: Field = {\r\n        value: form.username.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.username.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if (form.password.value.length < 6) {\r\n      const errorMsg: string =\r\n        \"Votre mot de passe doit faire au moins 6 caractères de long.\";\r\n      const newField: Field = {\r\n        value: form.password.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.password.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      setMessage(\"👉 Tentative de connexion en cours ...\");\r\n      AuthenticationService.login(\r\n        form.username.value,\r\n        form.password.value\r\n      ).then((isAuthenticated) => {\r\n        if (!isAuthenticated) {\r\n          setMessage(\"🔐 Identifiant ou mot de passe incorrect.\");\r\n          return;\r\n        }\r\n        history.push(\"/pokemons\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && (\r\n                  <div className=\"form-group\">\r\n                    <div className=\"card-panel grey lighten-5\">{message}</div>\r\n                  </div>\r\n                )}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    className=\"form-control\"\r\n                    value={form.username.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.username.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.username.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    value={form.password.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.password.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.password.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">\r\n                  Valider\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthenticationService from \"./services/authentification-service\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      const isAuthenticated = AuthenticationService.isAuthenticated;\r\n      if (!isAuthenticated) {\r\n        return <Redirect to={{ pathname: \"/login\" }} />;\r\n      }\r\n\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport PokemonEdit from \"./pages/pokemon-edit\";\r\nimport PokemonsDetail from \"./pages/pokemon-detail\";\r\nimport PokemonList from \"./pages/pokemon-list\";\r\nimport PageNotFound from \"./pages/page-not-found\";\r\nimport PokemonsAdd from \"./pages/pokemon-add\";\r\nimport Login from \"./pages/login\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* la barre de navigation commun à toutes les pages */}\r\n        <nav>\r\n          <div className=\"nav-wrapper teal\">\r\n            <Link to=\"/\" className=\"brand-logo center\">\r\n              Pokédex\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n        {/* Le système de gestion des routes de notre application */}\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={PokemonList} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n          <PrivateRoute path=\"/pokemons/add\" component={PokemonsAdd} />\r\n          <PrivateRoute path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n          <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM, { render } from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}